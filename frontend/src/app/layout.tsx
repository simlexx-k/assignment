
import React, { useState, useEffect } from 'react';
import dynamic from 'next/dynamic';
import { Inter } from "next/font/google";
import "./globals.css";

const inter = Inter({ subsets: ["latin"] });

//export const metadata = {
//  title: "Create Next App",
//  description: "Generated by create next app",
//};

const RootLayoutComponent = ({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) => {
  const [darkMode, setDarkMode] = useState<boolean>(() => {
    // Initialize theme based on user's preference or system setting
    if (typeof window !== 'undefined') {
      return localStorage.getItem('theme') === 'dark' || (!('theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches);
    }
    return false;
  });

  // Apply the theme mode class to the body
  useEffect(() => {
    document.body.classList.toggle('dark', darkMode);
  }, [darkMode]);

  // Handle theme change
  const toggleDarkMode = () => {
    setDarkMode(!darkMode);
    localStorage.setItem('theme', !darkMode ? 'dark' : 'light');
  };

  return (
    <html lang="en">
      <head>
        <style>{inter.style}</style>
      </head>
      <body className={`${inter.className} ${darkMode ? 'dark' : ''}`}>
        <button onClick={toggleDarkMode} className="dark-mode-toggle">{darkMode ? 'Switch to Light Mode' : 'Switch to Dark Mode'}</button>
        {children}
      </body>
    </html>
  );
};

const RootLayout = dynamic(() => Promise.resolve(RootLayoutComponent), { ssr: false });

export default RootLayout;